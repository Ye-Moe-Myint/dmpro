{"ast":null,"code":"var log = require('npmlog'),\n  execFile = require('child_process').execFile,\n  path = require('path');\nfunction findVS2017(callback) {\n  var ps = path.join(process.env.SystemRoot, 'System32', 'WindowsPowerShell', 'v1.0', 'powershell.exe');\n  var csFile = path.join(__dirname, 'Find-VS2017.cs');\n  var psArgs = ['-ExecutionPolicy', 'Unrestricted', '-NoProfile', '-Command', '&{Add-Type -Path \\'' + csFile + '\\';' + '[VisualStudioConfiguration.Main]::Query()}'];\n  log.silly('find vs2017', 'Running', ps, psArgs);\n  var child = execFile(ps, psArgs, {\n    encoding: 'utf8'\n  }, function (err, stdout, stderr) {\n    log.silly('find vs2017', 'PS err:', err);\n    log.silly('find vs2017', 'PS stdout:', stdout);\n    log.silly('find vs2017', 'PS stderr:', stderr);\n    if (err) return callback(new Error('Could not use PowerShell to find VS2017'));\n    var vsSetup;\n    try {\n      vsSetup = JSON.parse(stdout);\n    } catch (e) {\n      log.silly('find vs2017', e);\n      return callback(new Error('Could not use PowerShell to find VS2017'));\n    }\n    log.silly('find vs2017', 'vsSetup:', vsSetup);\n    if (vsSetup && vsSetup.log) log.verbose('find vs2017', vsSetup.log.trimRight());\n    if (!vsSetup || !vsSetup.path || !vsSetup.sdk) {\n      return callback(new Error('No usable installation of VS2017 found'));\n    }\n    log.verbose('find vs2017', 'using installation:', vsSetup.path);\n    callback(null, {\n      \"path\": vsSetup.path,\n      \"sdk\": vsSetup.sdk\n    });\n  });\n  child.stdin.end();\n}\nmodule.exports = findVS2017;","map":{"version":3,"names":["log","require","execFile","path","findVS2017","callback","ps","join","process","env","SystemRoot","csFile","__dirname","psArgs","silly","child","encoding","err","stdout","stderr","Error","vsSetup","JSON","parse","e","verbose","trimRight","sdk","stdin","end","module","exports"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/lib/find-vs2017.js"],"sourcesContent":["var log = require('npmlog')\n  , execFile = require('child_process').execFile\n  , path = require('path')\n\nfunction findVS2017(callback) {\n  var ps = path.join(process.env.SystemRoot, 'System32', 'WindowsPowerShell',\n                     'v1.0', 'powershell.exe')\n  var csFile = path.join(__dirname, 'Find-VS2017.cs')\n  var psArgs = ['-ExecutionPolicy', 'Unrestricted', '-NoProfile',\n                '-Command', '&{Add-Type -Path \\'' + csFile + '\\';' +\n                '[VisualStudioConfiguration.Main]::Query()}']\n\n  log.silly('find vs2017', 'Running', ps, psArgs)\n  var child = execFile(ps, psArgs, { encoding: 'utf8' },\n           function (err, stdout, stderr) {\n    log.silly('find vs2017', 'PS err:', err)\n    log.silly('find vs2017', 'PS stdout:', stdout)\n    log.silly('find vs2017', 'PS stderr:', stderr)\n\n    if (err)\n      return callback(new Error('Could not use PowerShell to find VS2017'))\n\n    var vsSetup\n    try {\n      vsSetup = JSON.parse(stdout)\n    } catch (e) {\n      log.silly('find vs2017', e)\n      return callback(new Error('Could not use PowerShell to find VS2017'))\n    }\n    log.silly('find vs2017', 'vsSetup:', vsSetup)\n\n    if (vsSetup && vsSetup.log)\n      log.verbose('find vs2017', vsSetup.log.trimRight())\n\n    if (!vsSetup || !vsSetup.path || !vsSetup.sdk) {\n      return callback(new Error('No usable installation of VS2017 found'))\n    }\n\n    log.verbose('find vs2017', 'using installation:', vsSetup.path)\n    callback(null, { \"path\": vsSetup.path, \"sdk\": vsSetup.sdk })\n  })\n\n  child.stdin.end()\n}\n\nmodule.exports = findVS2017\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;EACvBC,QAAQ,GAAGD,OAAO,CAAC,eAAe,CAAC,CAACC,QAAQ;EAC5CC,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE1B,SAASG,UAAU,CAACC,QAAQ,EAAE;EAC5B,IAAIC,EAAE,GAAGH,IAAI,CAACI,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,EAAE,UAAU,EAAE,mBAAmB,EACvD,MAAM,EAAE,gBAAgB,CAAC;EAC5C,IAAIC,MAAM,GAAGR,IAAI,CAACI,IAAI,CAACK,SAAS,EAAE,gBAAgB,CAAC;EACnD,IAAIC,MAAM,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,YAAY,EAChD,UAAU,EAAE,qBAAqB,GAAGF,MAAM,GAAG,KAAK,GAClD,4CAA4C,CAAC;EAE3DX,GAAG,CAACc,KAAK,CAAC,aAAa,EAAE,SAAS,EAAER,EAAE,EAAEO,MAAM,CAAC;EAC/C,IAAIE,KAAK,GAAGb,QAAQ,CAACI,EAAE,EAAEO,MAAM,EAAE;IAAEG,QAAQ,EAAE;EAAO,CAAC,EAC5C,UAAUC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAE;IACtCnB,GAAG,CAACc,KAAK,CAAC,aAAa,EAAE,SAAS,EAAEG,GAAG,CAAC;IACxCjB,GAAG,CAACc,KAAK,CAAC,aAAa,EAAE,YAAY,EAAEI,MAAM,CAAC;IAC9ClB,GAAG,CAACc,KAAK,CAAC,aAAa,EAAE,YAAY,EAAEK,MAAM,CAAC;IAE9C,IAAIF,GAAG,EACL,OAAOZ,QAAQ,CAAC,IAAIe,KAAK,CAAC,yCAAyC,CAAC,CAAC;IAEvE,IAAIC,OAAO;IACX,IAAI;MACFA,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;IAC9B,CAAC,CAAC,OAAOM,CAAC,EAAE;MACVxB,GAAG,CAACc,KAAK,CAAC,aAAa,EAAEU,CAAC,CAAC;MAC3B,OAAOnB,QAAQ,CAAC,IAAIe,KAAK,CAAC,yCAAyC,CAAC,CAAC;IACvE;IACApB,GAAG,CAACc,KAAK,CAAC,aAAa,EAAE,UAAU,EAAEO,OAAO,CAAC;IAE7C,IAAIA,OAAO,IAAIA,OAAO,CAACrB,GAAG,EACxBA,GAAG,CAACyB,OAAO,CAAC,aAAa,EAAEJ,OAAO,CAACrB,GAAG,CAAC0B,SAAS,EAAE,CAAC;IAErD,IAAI,CAACL,OAAO,IAAI,CAACA,OAAO,CAAClB,IAAI,IAAI,CAACkB,OAAO,CAACM,GAAG,EAAE;MAC7C,OAAOtB,QAAQ,CAAC,IAAIe,KAAK,CAAC,wCAAwC,CAAC,CAAC;IACtE;IAEApB,GAAG,CAACyB,OAAO,CAAC,aAAa,EAAE,qBAAqB,EAAEJ,OAAO,CAAClB,IAAI,CAAC;IAC/DE,QAAQ,CAAC,IAAI,EAAE;MAAE,MAAM,EAAEgB,OAAO,CAAClB,IAAI;MAAE,KAAK,EAAEkB,OAAO,CAACM;IAAI,CAAC,CAAC;EAC9D,CAAC,CAAC;EAEFZ,KAAK,CAACa,KAAK,CAACC,GAAG,EAAE;AACnB;AAEAC,MAAM,CAACC,OAAO,GAAG3B,UAAU"},"metadata":{},"sourceType":"script"}