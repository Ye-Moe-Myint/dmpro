{"ast":null,"code":"module.exports = exports = remove;\nexports.usage = 'Removes the node development files for the specified version';\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  rm = require('rimraf'),\n  path = require('path'),\n  log = require('npmlog'),\n  semver = require('semver');\nfunction remove(gyp, argv, callback) {\n  var devDir = gyp.devDir;\n  log.verbose('remove', 'using node-gyp dir:', devDir);\n\n  // get the user-specified version to remove\n  var version = argv[0] || gyp.opts.target;\n  log.verbose('remove', 'removing target version:', version);\n  if (!version) {\n    return callback(new Error('You must specify a version number to remove. Ex: \"' + process.version + '\"'));\n  }\n  var versionSemver = semver.parse(version);\n  if (versionSemver) {\n    // flatten the version Array into a String\n    version = versionSemver.version;\n  }\n  var versionPath = path.resolve(gyp.devDir, version);\n  log.verbose('remove', 'removing development files for version:', version);\n\n  // first check if its even installed\n  fs.stat(versionPath, function (err, stat) {\n    if (err) {\n      if (err.code == 'ENOENT') {\n        callback(null, 'version was already uninstalled: ' + version);\n      } else {\n        callback(err);\n      }\n      return;\n    }\n    // Go ahead and delete the dir\n    rm(versionPath, callback);\n  });\n}","map":{"version":3,"names":["module","exports","remove","usage","fs","require","rm","path","log","semver","gyp","argv","callback","devDir","verbose","version","opts","target","Error","process","versionSemver","parse","versionPath","resolve","stat","err","code"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/lib/remove.js"],"sourcesContent":["\nmodule.exports = exports = remove\n\nexports.usage = 'Removes the node development files for the specified version'\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , rm = require('rimraf')\n  , path = require('path')\n  , log = require('npmlog')\n  , semver = require('semver')\n\nfunction remove (gyp, argv, callback) {\n\n  var devDir = gyp.devDir\n  log.verbose('remove', 'using node-gyp dir:', devDir)\n\n  // get the user-specified version to remove\n  var version = argv[0] || gyp.opts.target\n  log.verbose('remove', 'removing target version:', version)\n\n  if (!version) {\n    return callback(new Error('You must specify a version number to remove. Ex: \"' + process.version + '\"'))\n  }\n\n  var versionSemver = semver.parse(version)\n  if (versionSemver) {\n    // flatten the version Array into a String\n    version = versionSemver.version\n  }\n\n  var versionPath = path.resolve(gyp.devDir, version)\n  log.verbose('remove', 'removing development files for version:', version)\n\n  // first check if its even installed\n  fs.stat(versionPath, function (err, stat) {\n    if (err) {\n      if (err.code == 'ENOENT') {\n        callback(null, 'version was already uninstalled: ' + version)\n      } else {\n        callback(err)\n      }\n      return\n    }\n    // Go ahead and delete the dir\n    rm(versionPath, callback)\n  })\n\n}\n"],"mappings":"AACAA,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGC,MAAM;AAEjCD,OAAO,CAACE,KAAK,GAAG,8DAA8D;;AAE9E;AACA;AACA;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;EAClBC,EAAE,GAAGD,OAAO,CAAC,QAAQ,CAAC;EACtBE,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;EACtBG,GAAG,GAAGH,OAAO,CAAC,QAAQ,CAAC;EACvBI,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAE9B,SAASH,MAAM,CAAEQ,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EAEpC,IAAIC,MAAM,GAAGH,GAAG,CAACG,MAAM;EACvBL,GAAG,CAACM,OAAO,CAAC,QAAQ,EAAE,qBAAqB,EAAED,MAAM,CAAC;;EAEpD;EACA,IAAIE,OAAO,GAAGJ,IAAI,CAAC,CAAC,CAAC,IAAID,GAAG,CAACM,IAAI,CAACC,MAAM;EACxCT,GAAG,CAACM,OAAO,CAAC,QAAQ,EAAE,0BAA0B,EAAEC,OAAO,CAAC;EAE1D,IAAI,CAACA,OAAO,EAAE;IACZ,OAAOH,QAAQ,CAAC,IAAIM,KAAK,CAAC,oDAAoD,GAAGC,OAAO,CAACJ,OAAO,GAAG,GAAG,CAAC,CAAC;EAC1G;EAEA,IAAIK,aAAa,GAAGX,MAAM,CAACY,KAAK,CAACN,OAAO,CAAC;EACzC,IAAIK,aAAa,EAAE;IACjB;IACAL,OAAO,GAAGK,aAAa,CAACL,OAAO;EACjC;EAEA,IAAIO,WAAW,GAAGf,IAAI,CAACgB,OAAO,CAACb,GAAG,CAACG,MAAM,EAAEE,OAAO,CAAC;EACnDP,GAAG,CAACM,OAAO,CAAC,QAAQ,EAAE,yCAAyC,EAAEC,OAAO,CAAC;;EAEzE;EACAX,EAAE,CAACoB,IAAI,CAACF,WAAW,EAAE,UAAUG,GAAG,EAAED,IAAI,EAAE;IACxC,IAAIC,GAAG,EAAE;MACP,IAAIA,GAAG,CAACC,IAAI,IAAI,QAAQ,EAAE;QACxBd,QAAQ,CAAC,IAAI,EAAE,mCAAmC,GAAGG,OAAO,CAAC;MAC/D,CAAC,MAAM;QACLH,QAAQ,CAACa,GAAG,CAAC;MACf;MACA;IACF;IACA;IACAnB,EAAE,CAACgB,WAAW,EAAEV,QAAQ,CAAC;EAC3B,CAAC,CAAC;AAEJ"},"metadata":{},"sourceType":"script"}