{"ast":null,"code":"// pipe in an fstream, and it'll make a tarball.\n// key-value pair argument is global extended header props.\n\nmodule.exports = Pack;\nvar EntryWriter = require(\"./entry-writer.js\"),\n  Stream = require(\"stream\").Stream,\n  path = require(\"path\"),\n  inherits = require(\"inherits\"),\n  GlobalHeaderWriter = require(\"./global-header-writer.js\"),\n  collect = require(\"fstream\").collect,\n  eof = new Buffer(512);\nfor (var i = 0; i < 512; i++) eof[i] = 0;\ninherits(Pack, Stream);\nfunction Pack(props) {\n  // console.error(\"-- p ctor\")\n  var me = this;\n  if (!(me instanceof Pack)) return new Pack(props);\n  if (props) me._noProprietary = props.noProprietary;else me._noProprietary = false;\n  me._global = props;\n  me.readable = true;\n  me.writable = true;\n  me._buffer = [];\n  // console.error(\"-- -- set current to null in ctor\")\n  me._currentEntry = null;\n  me._processing = false;\n  me._pipeRoot = null;\n  me.on(\"pipe\", function (src) {\n    if (src.root === me._pipeRoot) return;\n    me._pipeRoot = src;\n    src.on(\"end\", function () {\n      me._pipeRoot = null;\n    });\n    me.add(src);\n  });\n}\nPack.prototype.addGlobal = function (props) {\n  // console.error(\"-- p addGlobal\")\n  if (this._didGlobal) return;\n  this._didGlobal = true;\n  var me = this;\n  GlobalHeaderWriter(props).on(\"data\", function (c) {\n    me.emit(\"data\", c);\n  }).end();\n};\nPack.prototype.add = function (stream) {\n  if (this._global && !this._didGlobal) this.addGlobal(this._global);\n  if (this._ended) return this.emit(\"error\", new Error(\"add after end\"));\n  collect(stream);\n  this._buffer.push(stream);\n  this._process();\n  this._needDrain = this._buffer.length > 0;\n  return !this._needDrain;\n};\nPack.prototype.pause = function () {\n  this._paused = true;\n  if (this._currentEntry) this._currentEntry.pause();\n  this.emit(\"pause\");\n};\nPack.prototype.resume = function () {\n  this._paused = false;\n  if (this._currentEntry) this._currentEntry.resume();\n  this.emit(\"resume\");\n  this._process();\n};\nPack.prototype.end = function () {\n  this._ended = true;\n  this._buffer.push(eof);\n  this._process();\n};\nPack.prototype._process = function () {\n  var me = this;\n  if (me._paused || me._processing) {\n    return;\n  }\n  var entry = me._buffer.shift();\n  if (!entry) {\n    if (me._needDrain) {\n      me.emit(\"drain\");\n    }\n    return;\n  }\n  if (entry.ready === false) {\n    // console.error(\"-- entry is not ready\", entry)\n    me._buffer.unshift(entry);\n    entry.on(\"ready\", function () {\n      // console.error(\"-- -- ready!\", entry)\n      me._process();\n    });\n    return;\n  }\n  me._processing = true;\n  if (entry === eof) {\n    // need 2 ending null blocks.\n    me.emit(\"data\", eof);\n    me.emit(\"data\", eof);\n    me.emit(\"end\");\n    me.emit(\"close\");\n    return;\n  }\n\n  // Change the path to be relative to the root dir that was\n  // added to the tarball.\n  //\n  // XXX This should be more like how -C works, so you can\n  // explicitly set a root dir, and also explicitly set a pathname\n  // in the tarball to use.  That way we can skip a lot of extra\n  // work when resolving symlinks for bundled dependencies in npm.\n\n  var root = path.dirname((entry.root || entry).path);\n  if (me._global && me._global.fromBase && entry.root && entry.root.path) {\n    // user set 'fromBase: true' indicating tar root should be directory itself\n    root = entry.root.path;\n  }\n  var wprops = {};\n  Object.keys(entry.props || {}).forEach(function (k) {\n    wprops[k] = entry.props[k];\n  });\n  if (me._noProprietary) wprops.noProprietary = true;\n  wprops.path = path.relative(root, entry.path || '');\n\n  // actually not a matter of opinion or taste.\n  if (process.platform === \"win32\") {\n    wprops.path = wprops.path.replace(/\\\\/g, \"/\");\n  }\n  if (!wprops.type) wprops.type = 'Directory';\n  switch (wprops.type) {\n    // sockets not supported\n    case \"Socket\":\n      return;\n    case \"Directory\":\n      wprops.path += \"/\";\n      wprops.size = 0;\n      break;\n    case \"Link\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath);\n      wprops.linkpath = path.relative(root, lp) || \".\";\n      wprops.size = 0;\n      break;\n    case \"SymbolicLink\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath);\n      wprops.linkpath = path.relative(path.dirname(entry.path), lp) || \".\";\n      wprops.size = 0;\n      break;\n  }\n\n  // console.error(\"-- new writer\", wprops)\n  // if (!wprops.type) {\n  //   // console.error(\"-- no type?\", entry.constructor.name, entry)\n  // }\n\n  // console.error(\"-- -- set current to new writer\", wprops.path)\n  var writer = me._currentEntry = EntryWriter(wprops);\n  writer.parent = me;\n\n  // writer.on(\"end\", function () {\n  //   // console.error(\"-- -- writer end\", writer.path)\n  // })\n\n  writer.on(\"data\", function (c) {\n    me.emit(\"data\", c);\n  });\n  writer.on(\"header\", function () {\n    Buffer.prototype.toJSON = function () {\n      return this.toString().split(/\\0/).join(\".\");\n    };\n    // console.error(\"-- -- writer header %j\", writer.props)\n    if (writer.props.size === 0) nextEntry();\n  });\n  writer.on(\"close\", nextEntry);\n  var ended = false;\n  function nextEntry() {\n    if (ended) return;\n    ended = true;\n\n    // console.error(\"-- -- writer close\", writer.path)\n    // console.error(\"-- -- set current to null\", wprops.path)\n    me._currentEntry = null;\n    me._processing = false;\n    me._process();\n  }\n  writer.on(\"error\", function (er) {\n    // console.error(\"-- -- writer error\", writer.path)\n    me.emit(\"error\", er);\n  });\n\n  // if it's the root, then there's no need to add its entries,\n  // or data, since they'll be added directly.\n  if (entry === me._pipeRoot) {\n    // console.error(\"-- is the root, don't auto-add\")\n    writer.add = null;\n  }\n  entry.pipe(writer);\n};\nPack.prototype.destroy = function () {};\nPack.prototype.write = function () {};","map":{"version":3,"names":["module","exports","Pack","EntryWriter","require","Stream","path","inherits","GlobalHeaderWriter","collect","eof","Buffer","i","props","me","_noProprietary","noProprietary","_global","readable","writable","_buffer","_currentEntry","_processing","_pipeRoot","on","src","root","add","prototype","addGlobal","_didGlobal","c","emit","end","stream","_ended","Error","push","_process","_needDrain","length","pause","_paused","resume","entry","shift","ready","unshift","dirname","fromBase","wprops","Object","keys","forEach","k","relative","process","platform","replace","type","size","lp","resolve","linkpath","writer","parent","toJSON","toString","split","join","nextEntry","ended","er","pipe","destroy","write"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/node_modules/tar/lib/pack.js"],"sourcesContent":["// pipe in an fstream, and it'll make a tarball.\n// key-value pair argument is global extended header props.\n\nmodule.exports = Pack\n\nvar EntryWriter = require(\"./entry-writer.js\")\n  , Stream = require(\"stream\").Stream\n  , path = require(\"path\")\n  , inherits = require(\"inherits\")\n  , GlobalHeaderWriter = require(\"./global-header-writer.js\")\n  , collect = require(\"fstream\").collect\n  , eof = new Buffer(512)\n\nfor (var i = 0; i < 512; i ++) eof[i] = 0\n\ninherits(Pack, Stream)\n\nfunction Pack (props) {\n  // console.error(\"-- p ctor\")\n  var me = this\n  if (!(me instanceof Pack)) return new Pack(props)\n\n  if (props) me._noProprietary = props.noProprietary\n  else me._noProprietary = false\n\n  me._global = props\n\n  me.readable = true\n  me.writable = true\n  me._buffer = []\n  // console.error(\"-- -- set current to null in ctor\")\n  me._currentEntry = null\n  me._processing = false\n\n  me._pipeRoot = null\n  me.on(\"pipe\", function (src) {\n    if (src.root === me._pipeRoot) return\n    me._pipeRoot = src\n    src.on(\"end\", function () {\n      me._pipeRoot = null\n    })\n    me.add(src)\n  })\n}\n\nPack.prototype.addGlobal = function (props) {\n  // console.error(\"-- p addGlobal\")\n  if (this._didGlobal) return\n  this._didGlobal = true\n\n  var me = this\n  GlobalHeaderWriter(props)\n    .on(\"data\", function (c) {\n      me.emit(\"data\", c)\n    })\n    .end()\n}\n\nPack.prototype.add = function (stream) {\n  if (this._global && !this._didGlobal) this.addGlobal(this._global)\n\n  if (this._ended) return this.emit(\"error\", new Error(\"add after end\"))\n\n  collect(stream)\n  this._buffer.push(stream)\n  this._process()\n  this._needDrain = this._buffer.length > 0\n  return !this._needDrain\n}\n\nPack.prototype.pause = function () {\n  this._paused = true\n  if (this._currentEntry) this._currentEntry.pause()\n  this.emit(\"pause\")\n}\n\nPack.prototype.resume = function () {\n  this._paused = false\n  if (this._currentEntry) this._currentEntry.resume()\n  this.emit(\"resume\")\n  this._process()\n}\n\nPack.prototype.end = function () {\n  this._ended = true\n  this._buffer.push(eof)\n  this._process()\n}\n\nPack.prototype._process = function () {\n  var me = this\n  if (me._paused || me._processing) {\n    return\n  }\n\n  var entry = me._buffer.shift()\n\n  if (!entry) {\n    if (me._needDrain) {\n      me.emit(\"drain\")\n    }\n    return\n  }\n\n  if (entry.ready === false) {\n    // console.error(\"-- entry is not ready\", entry)\n    me._buffer.unshift(entry)\n    entry.on(\"ready\", function () {\n      // console.error(\"-- -- ready!\", entry)\n      me._process()\n    })\n    return\n  }\n\n  me._processing = true\n\n  if (entry === eof) {\n    // need 2 ending null blocks.\n    me.emit(\"data\", eof)\n    me.emit(\"data\", eof)\n    me.emit(\"end\")\n    me.emit(\"close\")\n    return\n  }\n\n  // Change the path to be relative to the root dir that was\n  // added to the tarball.\n  //\n  // XXX This should be more like how -C works, so you can\n  // explicitly set a root dir, and also explicitly set a pathname\n  // in the tarball to use.  That way we can skip a lot of extra\n  // work when resolving symlinks for bundled dependencies in npm.\n\n  var root = path.dirname((entry.root || entry).path);\n  if (me._global && me._global.fromBase && entry.root && entry.root.path) {\n    // user set 'fromBase: true' indicating tar root should be directory itself\n    root = entry.root.path;\n  }\n\n  var wprops = {}\n\n  Object.keys(entry.props || {}).forEach(function (k) {\n    wprops[k] = entry.props[k]\n  })\n\n  if (me._noProprietary) wprops.noProprietary = true\n\n  wprops.path = path.relative(root, entry.path || '')\n\n  // actually not a matter of opinion or taste.\n  if (process.platform === \"win32\") {\n    wprops.path = wprops.path.replace(/\\\\/g, \"/\")\n  }\n\n  if (!wprops.type)\n    wprops.type = 'Directory'\n\n  switch (wprops.type) {\n    // sockets not supported\n    case \"Socket\":\n      return\n\n    case \"Directory\":\n      wprops.path += \"/\"\n      wprops.size = 0\n      break\n\n    case \"Link\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath)\n      wprops.linkpath = path.relative(root, lp) || \".\"\n      wprops.size = 0\n      break\n\n    case \"SymbolicLink\":\n      var lp = path.resolve(path.dirname(entry.path), entry.linkpath)\n      wprops.linkpath = path.relative(path.dirname(entry.path), lp) || \".\"\n      wprops.size = 0\n      break\n  }\n\n  // console.error(\"-- new writer\", wprops)\n  // if (!wprops.type) {\n  //   // console.error(\"-- no type?\", entry.constructor.name, entry)\n  // }\n\n  // console.error(\"-- -- set current to new writer\", wprops.path)\n  var writer = me._currentEntry = EntryWriter(wprops)\n\n  writer.parent = me\n\n  // writer.on(\"end\", function () {\n  //   // console.error(\"-- -- writer end\", writer.path)\n  // })\n\n  writer.on(\"data\", function (c) {\n    me.emit(\"data\", c)\n  })\n\n  writer.on(\"header\", function () {\n    Buffer.prototype.toJSON = function () {\n      return this.toString().split(/\\0/).join(\".\")\n    }\n    // console.error(\"-- -- writer header %j\", writer.props)\n    if (writer.props.size === 0) nextEntry()\n  })\n  writer.on(\"close\", nextEntry)\n\n  var ended = false\n  function nextEntry () {\n    if (ended) return\n    ended = true\n\n    // console.error(\"-- -- writer close\", writer.path)\n    // console.error(\"-- -- set current to null\", wprops.path)\n    me._currentEntry = null\n    me._processing = false\n    me._process()\n  }\n\n  writer.on(\"error\", function (er) {\n    // console.error(\"-- -- writer error\", writer.path)\n    me.emit(\"error\", er)\n  })\n\n  // if it's the root, then there's no need to add its entries,\n  // or data, since they'll be added directly.\n  if (entry === me._pipeRoot) {\n    // console.error(\"-- is the root, don't auto-add\")\n    writer.add = null\n  }\n\n  entry.pipe(writer)\n}\n\nPack.prototype.destroy = function () {}\nPack.prototype.write = function () {}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}