{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar copy = require('../copy').copy;\nvar remove = require('../remove').remove;\nvar mkdirp = require('../mkdirs').mkdirp;\nvar pathExists = require('../path-exists').pathExists;\nfunction move(src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  var overwrite = opts.overwrite || opts.clobber || false;\n  src = path.resolve(src);\n  dest = path.resolve(dest);\n  if (src === dest) return fs.access(src, cb);\n  fs.stat(src, function (err, st) {\n    if (err) return cb(err);\n    if (st.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(\"Cannot move '\".concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\")));\n    }\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return cb(err);\n      return doRename(src, dest, overwrite, cb);\n    });\n  });\n}\nfunction doRename(src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, function (err) {\n      if (err) return cb(err);\n      return rename(src, dest, overwrite, cb);\n    });\n  }\n  pathExists(dest, function (err, destExists) {\n    if (err) return cb(err);\n    if (destExists) return cb(new Error('dest already exists.'));\n    return rename(src, dest, overwrite, cb);\n  });\n}\nfunction rename(src, dest, overwrite, cb) {\n  fs.rename(src, dest, function (err) {\n    if (!err) return cb();\n    if (err.code !== 'EXDEV') return cb(err);\n    return moveAcrossDevice(src, dest, overwrite, cb);\n  });\n}\nfunction moveAcrossDevice(src, dest, overwrite, cb) {\n  var opts = {\n    overwrite: overwrite,\n    errorOnExist: true\n  };\n  copy(src, dest, opts, function (err) {\n    if (err) return cb(err);\n    return remove(src, cb);\n  });\n}\nfunction isSrcSubdir(src, dest) {\n  var srcArray = src.split(path.sep);\n  var destArray = dest.split(path.sep);\n  return srcArray.reduce(function (acc, current, i) {\n    return acc && destArray[i] === current;\n  }, true);\n}\nmodule.exports = {\n  move: u(move)\n};","map":{"version":3,"names":["u","require","fromCallback","fs","path","copy","remove","mkdirp","pathExists","move","src","dest","opts","cb","overwrite","clobber","resolve","access","stat","err","st","isDirectory","isSrcSubdir","Error","dirname","doRename","rename","destExists","code","moveAcrossDevice","errorOnExist","srcArray","split","sep","destArray","reduce","acc","current","i","module","exports"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/fs-extra/lib/move/index.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copy = require('../copy').copy\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirp\nconst pathExists = require('../path-exists').pathExists\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  src = path.resolve(src)\n  dest = path.resolve(dest)\n\n  if (src === dest) return fs.access(src, cb)\n\n  fs.stat(src, (err, st) => {\n    if (err) return cb(err)\n\n    if (st.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    mkdirp(path.dirname(dest), err => {\n      if (err) return cb(err)\n      return doRename(src, dest, overwrite, cb)\n    })\n  })\n}\n\nfunction doRename (src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nfunction isSrcSubdir (src, dest) {\n  const srcArray = src.split(path.sep)\n  const destArray = dest.split(path.sep)\n\n  return srcArray.reduce((acc, current, i) => {\n    return acc && destArray[i] === current\n  }, true)\n}\n\nmodule.exports = {\n  move: u(move)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}