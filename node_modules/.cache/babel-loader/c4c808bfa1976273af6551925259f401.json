{"ast":null,"code":"var platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform;\nvar _require = require('path'),\n  resolve = _require.resolve,\n  parse = _require.parse;\nvar pathArg = function pathArg(path) {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(new TypeError('path must be a string without null bytes'), {\n      path: path,\n      code: 'ERR_INVALID_ARG_VALUE'\n    });\n  }\n  path = resolve(path);\n  if (platform === 'win32') {\n    var badWinChars = /[*|\"<>?:]/;\n    var _parse = parse(path),\n      root = _parse.root;\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path: path,\n        code: 'EINVAL'\n      });\n    }\n  }\n  return path;\n};\nmodule.exports = pathArg;","map":{"version":3,"names":["platform","process","env","__TESTING_MKDIRP_PLATFORM__","require","resolve","parse","pathArg","path","test","Object","assign","TypeError","code","badWinChars","root","substr","length","Error","module","exports"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/mkdirp/lib/path-arg.js"],"sourcesContent":["const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B,IAAIF,OAAO,CAACD,QAAQ;AAC5E,eAA2BI,OAAO,CAAC,MAAM,CAAC;EAAlCC,OAAO,YAAPA,OAAO;EAAEC,KAAK,YAALA,KAAK;AACtB,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,IAAI,EAAI;EACtB,IAAI,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC,EAAE;IACnB;IACA,MAAME,MAAM,CAACC,MAAM,CACjB,IAAIC,SAAS,CAAC,0CAA0C,CAAC,EACzD;MACEJ,IAAI,EAAJA,IAAI;MACJK,IAAI,EAAE;IACR,CAAC,CACF;EACH;EAEAL,IAAI,GAAGH,OAAO,CAACG,IAAI,CAAC;EACpB,IAAIR,QAAQ,KAAK,OAAO,EAAE;IACxB,IAAMc,WAAW,GAAG,WAAW;IAC/B,aAAeR,KAAK,CAACE,IAAI,CAAC;MAAnBO,IAAI,UAAJA,IAAI;IACX,IAAID,WAAW,CAACL,IAAI,CAACD,IAAI,CAACQ,MAAM,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAE;MAC9C,MAAMP,MAAM,CAACC,MAAM,CAAC,IAAIO,KAAK,CAAC,6BAA6B,CAAC,EAAE;QAC5DV,IAAI,EAAJA,IAAI;QACJK,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF;EAEA,OAAOL,IAAI;AACb,CAAC;AACDW,MAAM,CAACC,OAAO,GAAGb,OAAO"},"metadata":{},"sourceType":"script"}