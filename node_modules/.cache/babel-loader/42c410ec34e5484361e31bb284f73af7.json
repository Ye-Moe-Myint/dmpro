{"ast":null,"code":"'use strict';\n\nvar back = require('./lib/back');\nvar emitter = require('./lib/global_emitter');\nvar _require = require('./lib/intercept'),\n  activate = _require.activate,\n  isActive = _require.isActive,\n  isDone = _require.isDone,\n  isOn = _require.isOn,\n  pendingMocks = _require.pendingMocks,\n  activeMocks = _require.activeMocks,\n  removeInterceptor = _require.removeInterceptor,\n  disableNetConnect = _require.disableNetConnect,\n  enableNetConnect = _require.enableNetConnect,\n  removeAll = _require.removeAll,\n  abortPendingRequests = _require.abortPendingRequests;\nvar recorder = require('./lib/recorder');\nvar _require2 = require('./lib/scope'),\n  Scope = _require2.Scope,\n  load = _require2.load,\n  loadDefs = _require2.loadDefs,\n  define = _require2.define;\nmodule.exports = function (basePath, options) {\n  return new Scope(basePath, options);\n};\nObject.assign(module.exports, {\n  activate: activate,\n  isActive: isActive,\n  isDone: isDone,\n  pendingMocks: pendingMocks,\n  activeMocks: activeMocks,\n  removeInterceptor: removeInterceptor,\n  disableNetConnect: disableNetConnect,\n  enableNetConnect: enableNetConnect,\n  cleanAll: removeAll,\n  abortPendingRequests: abortPendingRequests,\n  load: load,\n  loadDefs: loadDefs,\n  define: define,\n  emitter: emitter,\n  recorder: {\n    rec: recorder.record,\n    clear: recorder.clear,\n    play: recorder.outputs\n  },\n  restore: recorder.restore,\n  back: back\n});\n\n// We always activate Nock on import, overriding the globals.\n// Setting the Back mode \"activates\" Nock by overriding the global entries in the `http/s` modules.\n// If Nock Back is configured, we need to honor that setting for backward compatibility,\n// otherwise we rely on Nock Back's default initializing side effect.\nif (isOn()) {\n  back.setMode(process.env.NOCK_BACK_MODE || 'dryrun');\n}","map":{"version":3,"names":["back","require","emitter","activate","isActive","isDone","isOn","pendingMocks","activeMocks","removeInterceptor","disableNetConnect","enableNetConnect","removeAll","abortPendingRequests","recorder","Scope","load","loadDefs","define","module","exports","basePath","options","Object","assign","cleanAll","rec","record","clear","play","outputs","restore","setMode","process","env","NOCK_BACK_MODE"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/nock/index.js"],"sourcesContent":["'use strict'\n\nconst back = require('./lib/back')\nconst emitter = require('./lib/global_emitter')\nconst {\n  activate,\n  isActive,\n  isDone,\n  isOn,\n  pendingMocks,\n  activeMocks,\n  removeInterceptor,\n  disableNetConnect,\n  enableNetConnect,\n  removeAll,\n  abortPendingRequests,\n} = require('./lib/intercept')\nconst recorder = require('./lib/recorder')\nconst { Scope, load, loadDefs, define } = require('./lib/scope')\n\nmodule.exports = (basePath, options) => new Scope(basePath, options)\n\nObject.assign(module.exports, {\n  activate,\n  isActive,\n  isDone,\n  pendingMocks,\n  activeMocks,\n  removeInterceptor,\n  disableNetConnect,\n  enableNetConnect,\n  cleanAll: removeAll,\n  abortPendingRequests,\n  load,\n  loadDefs,\n  define,\n  emitter,\n  recorder: {\n    rec: recorder.record,\n    clear: recorder.clear,\n    play: recorder.outputs,\n  },\n  restore: recorder.restore,\n  back,\n})\n\n// We always activate Nock on import, overriding the globals.\n// Setting the Back mode \"activates\" Nock by overriding the global entries in the `http/s` modules.\n// If Nock Back is configured, we need to honor that setting for backward compatibility,\n// otherwise we rely on Nock Back's default initializing side effect.\nif (isOn()) {\n  back.setMode(process.env.NOCK_BACK_MODE || 'dryrun')\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAMA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAClC,IAAMC,OAAO,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC/C,eAYIA,OAAO,CAAC,iBAAiB,CAAC;EAX5BE,QAAQ,YAARA,QAAQ;EACRC,QAAQ,YAARA,QAAQ;EACRC,MAAM,YAANA,MAAM;EACNC,IAAI,YAAJA,IAAI;EACJC,YAAY,YAAZA,YAAY;EACZC,WAAW,YAAXA,WAAW;EACXC,iBAAiB,YAAjBA,iBAAiB;EACjBC,iBAAiB,YAAjBA,iBAAiB;EACjBC,gBAAgB,YAAhBA,gBAAgB;EAChBC,SAAS,YAATA,SAAS;EACTC,oBAAoB,YAApBA,oBAAoB;AAEtB,IAAMC,QAAQ,GAAGb,OAAO,CAAC,gBAAgB,CAAC;AAC1C,gBAA0CA,OAAO,CAAC,aAAa,CAAC;EAAxDc,KAAK,aAALA,KAAK;EAAEC,IAAI,aAAJA,IAAI;EAAEC,QAAQ,aAARA,QAAQ;EAAEC,MAAM,aAANA,MAAM;AAErCC,MAAM,CAACC,OAAO,GAAG,UAACC,QAAQ,EAAEC,OAAO;EAAA,OAAK,IAAIP,KAAK,CAACM,QAAQ,EAAEC,OAAO,CAAC;AAAA;AAEpEC,MAAM,CAACC,MAAM,CAACL,MAAM,CAACC,OAAO,EAAE;EAC5BjB,QAAQ,EAARA,QAAQ;EACRC,QAAQ,EAARA,QAAQ;EACRC,MAAM,EAANA,MAAM;EACNE,YAAY,EAAZA,YAAY;EACZC,WAAW,EAAXA,WAAW;EACXC,iBAAiB,EAAjBA,iBAAiB;EACjBC,iBAAiB,EAAjBA,iBAAiB;EACjBC,gBAAgB,EAAhBA,gBAAgB;EAChBc,QAAQ,EAAEb,SAAS;EACnBC,oBAAoB,EAApBA,oBAAoB;EACpBG,IAAI,EAAJA,IAAI;EACJC,QAAQ,EAARA,QAAQ;EACRC,MAAM,EAANA,MAAM;EACNhB,OAAO,EAAPA,OAAO;EACPY,QAAQ,EAAE;IACRY,GAAG,EAAEZ,QAAQ,CAACa,MAAM;IACpBC,KAAK,EAAEd,QAAQ,CAACc,KAAK;IACrBC,IAAI,EAAEf,QAAQ,CAACgB;EACjB,CAAC;EACDC,OAAO,EAAEjB,QAAQ,CAACiB,OAAO;EACzB/B,IAAI,EAAJA;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,IAAIM,IAAI,EAAE,EAAE;EACVN,IAAI,CAACgC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,IAAI,QAAQ,CAAC;AACtD"},"metadata":{},"sourceType":"script"}