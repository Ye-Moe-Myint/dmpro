{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lieo/diabetes/CUT2DMTest/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/lieo/diabetes/CUT2DMTest/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";// Load envioronment variables\nif(process.env.NODE_ENV!=='production'){require('dotenv').config();}// setup Mongoose\nvar mongoose=require('mongoose');var _require=require('./user'),User=_require.User;// Connect to your mongo database using the MONGO_URL environment variable.\n// Locally, MONGO_URL will be loaded by dotenv from .env.\nmongoose.connect(process.env.MONGO_URL||'mongodb://127.0.0.1',{useNewUrlParser:true,useUnifiedTopology:true,dbName:'CUT2DM'}).then(function(){console.log(\"Connection success.\");}).catch(function(err){console.log(\"Connection to Mongo failed.\");});// Exit on error\nvar db=mongoose.connection.on('error',function(err){console.error(err);process.exit(1);});// Log to console once the database is open\ndb.once('open',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(\"Mongo connection started on \".concat(db.host,\":\").concat(db.port));case 1:case\"end\":return _context.stop();}},_callee);})));// create a user a new user\n//var testUser = new User({\n//username: \"lieo@gmail.com\",\n//password: \"Lieo1234\",\n//role: \"patient\",\n//role_id: \"63d03d13120621d12404bccd\",\n//  clinicianId: \"63d03826120621d12404bcc5\"\n//});\n// save user to database\n//testUser.save(function (err) {\n//  if (err) throw err;\n//})\nrequire('./patient');require('./measurement');require('./message');require('./note');require('./user');","map":{"version":3,"names":["process","env","NODE_ENV","require","config","mongoose","User","connect","MONGO_URL","useNewUrlParser","useUnifiedTopology","dbName","then","console","log","catch","err","db","connection","on","error","exit","once","host","port"],"sources":["/Users/lieo/diabetes/CUT2DMTest/src/index.js"],"sourcesContent":["// Load envioronment variables\nif (process.env.NODE_ENV !== 'production') {\n    require('dotenv').config()\n}\n\n// setup Mongoose\nconst mongoose = require('mongoose')\nvar { User } = require('./user')\n// Connect to your mongo database using the MONGO_URL environment variable.\n// Locally, MONGO_URL will be loaded by dotenv from .env.\nmongoose.connect(process.env.MONGO_URL || 'mongodb://127.0.0.1', {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    dbName: 'CUT2DM'\n})\n    .then(() => {\n        console.log(`Connection success.`)\n    })\n    .catch(err => {\n        console.log(\"Connection to Mongo failed.\")\n    })\n\n// Exit on error\nconst db = mongoose.connection.on('error', err => {\n    console.error(err);\n    process.exit(1)\n})\n\n// Log to console once the database is open\ndb.once('open', async () => {\n    console.log(`Mongo connection started on ${db.host}:${db.port}`)\n})\n\n// create a user a new user\n//var testUser = new User({\n    //username: \"lieo@gmail.com\",\n    //password: \"Lieo1234\",\n    //role: \"patient\",\n    //role_id: \"63d03d13120621d12404bccd\",\n  //  clinicianId: \"63d03826120621d12404bcc5\"\n//});\n\n// save user to database\n//testUser.save(function (err) {\n  //  if (err) throw err;\n//})\nrequire('./patient')\nrequire('./measurement')\nrequire('./message')\nrequire('./note')\nrequire('./user')\n"],"mappings":"0PAAA;AACA,GAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACvCC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE,CAC9B,CAEA;AACA,GAAMC,SAAQ,CAAGF,OAAO,CAAC,UAAU,CAAC,CACpC,aAAeA,OAAO,CAAC,QAAQ,CAAC,CAA1BG,IAAI,UAAJA,IAAI,CACV;AACA;AACAD,QAAQ,CAACE,OAAO,CAACP,OAAO,CAACC,GAAG,CAACO,SAAS,EAAI,qBAAqB,CAAE,CAC7DC,eAAe,CAAE,IAAI,CACrBC,kBAAkB,CAAE,IAAI,CACxBC,MAAM,CAAE,QACZ,CAAC,CAAC,CACGC,IAAI,CAAC,UAAM,CACRC,OAAO,CAACC,GAAG,uBAAuB,CACtC,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,GAAG,CAAI,CACVH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC9C,CAAC,CAAC,CAEN;AACA,GAAMG,GAAE,CAAGZ,QAAQ,CAACa,UAAU,CAACC,EAAE,CAAC,OAAO,CAAE,SAAAH,GAAG,CAAI,CAC9CH,OAAO,CAACO,KAAK,CAACJ,GAAG,CAAC,CAClBhB,OAAO,CAACqB,IAAI,CAAC,CAAC,CAAC,CACnB,CAAC,CAAC,CAEF;AACAJ,EAAE,CAACK,IAAI,CAAC,MAAM,wEAAE,oIACZT,OAAO,CAACC,GAAG,uCAAgCG,EAAE,CAACM,IAAI,aAAIN,EAAE,CAACO,IAAI,EAAG,sDACnE,GAAC,CAEF;AACA;AACI;AACA;AACA;AACA;AACF;AACF;AAEA;AACA;AACE;AACF;AACArB,OAAO,CAAC,WAAW,CAAC,CACpBA,OAAO,CAAC,eAAe,CAAC,CACxBA,OAAO,CAAC,WAAW,CAAC,CACpBA,OAAO,CAAC,QAAQ,CAAC,CACjBA,OAAO,CAAC,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}