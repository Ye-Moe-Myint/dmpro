{"ast":null,"code":"/**\n * Module exports.\n */\n\nmodule.exports = exports = gyp;\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('graceful-fs'),\n  path = require('path'),\n  nopt = require('nopt'),\n  log = require('npmlog'),\n  child_process = require('child_process'),\n  EE = require('events').EventEmitter,\n  inherits = require('util').inherits,\n  commands = [\n  // Module build commands\n  'build', 'clean', 'configure', 'rebuild'\n  // Development Header File management commands\n  , 'install', 'list', 'remove'],\n  aliases = {\n    'ls': 'list',\n    'rm': 'remove'\n  };\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp';\n\n/**\n * The `gyp` function.\n */\n\nfunction gyp() {\n  return new Gyp();\n}\nfunction Gyp() {\n  var self = this;\n  this.devDir = '';\n  this.commands = {};\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv);\n      return require('./' + command)(self, argv, callback);\n    };\n  });\n}\ninherits(Gyp, EE);\nexports.Gyp = Gyp;\nvar proto = Gyp.prototype;\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package');\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean // everywhere\n  ,\n  arch: String // 'configure'\n  ,\n  cafile: String // 'install'\n  ,\n  debug: Boolean // 'build'\n  ,\n  directory: String // bin\n  ,\n  make: String // 'build'\n  ,\n  msvs_version: String // 'configure'\n  ,\n  ensure: Boolean // 'install'\n  ,\n  solution: String // 'build' (windows only)\n  ,\n  proxy: String // 'install'\n  ,\n  devdir: String // everywhere\n  ,\n  nodedir: String // 'configure'\n  ,\n  loglevel: String // everywhere\n  ,\n  python: String // 'configure'\n  ,\n  'dist-url': String // 'install'\n  ,\n  'tarball': String // 'install'\n  ,\n  jobs: String // 'build'\n  ,\n  thin: String // 'configure'\n};\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n};\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases;\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts(argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv);\n  this.argv = this.opts.argv.remain.slice();\n  var commands = this.todo = [];\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg];\n    }\n    return arg;\n  }, this);\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg));\n      argv.shift();\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args;\n      }\n      commands.push({\n        name: arg,\n        args: []\n      });\n    }\n  }, this);\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0);\n  }\n\n  // support for inheriting config env variables from npm\n  var npm_config_prefix = 'npm_config_';\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npm_config_prefix) !== 0) return;\n    var val = process.env[name];\n    if (name === npm_config_prefix + 'loglevel') {\n      log.level = val;\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npm_config_prefix.length);\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) this.opts[name] = val;\n    }\n  }, this);\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel;\n  }\n  log.resume();\n};\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn(command, args, opts) {\n  if (!opts) opts = {};\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2];\n  }\n  var cp = child_process.spawn(command, args, opts);\n  log.info('spawn', command);\n  log.info('spawn args', args);\n  return cp;\n};\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage() {\n  var str = ['', '  Usage: node-gyp <command> [options]', '', '  where <command> is one of:', commands.map(function (c) {\n    return '    - ' + c + ' - ' + require('./' + c).usage;\n  }).join('\\n'), '', 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'), 'node@' + process.versions.node].join('\\n');\n  return str;\n};\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n  get: function get() {\n    return this.package.version;\n  },\n  enumerable: true\n});","map":{"version":3,"names":["module","exports","gyp","fs","require","path","nopt","log","child_process","EE","EventEmitter","inherits","commands","aliases","heading","Gyp","self","devDir","forEach","command","argv","callback","verbose","proto","prototype","package","configDefs","help","Boolean","arch","String","cafile","debug","directory","make","msvs_version","ensure","solution","proxy","devdir","nodedir","loglevel","python","jobs","thin","shorthands","release","C","j","silly","silent","parseArgv","parseOpts","opts","remain","slice","todo","map","arg","args","splice","indexOf","shift","length","push","name","npm_config_prefix","Object","keys","process","env","val","level","substring","resume","spawn","stdio","cp","info","usage","str","c","join","version","resolve","__dirname","versions","node","defineProperty","get","enumerable"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/lib/node-gyp.js"],"sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = exports = gyp\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('graceful-fs')\n  , path = require('path')\n  , nopt = require('nopt')\n  , log = require('npmlog')\n  , child_process = require('child_process')\n  , EE = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , commands = [\n      // Module build commands\n        'build'\n      , 'clean'\n      , 'configure'\n      , 'rebuild'\n      // Development Header File management commands\n      , 'install'\n      , 'list'\n      , 'remove'\n    ]\n  , aliases = {\n        'ls': 'list'\n      , 'rm': 'remove'\n    }\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp'\n\n/**\n * The `gyp` function.\n */\n\nfunction gyp () {\n  return new Gyp()\n}\n\nfunction Gyp () {\n  var self = this\n\n  this.devDir = ''\n  this.commands = {}\n\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv)\n      return require('./' + command)(self, argv, callback)\n    }\n  })\n}\ninherits(Gyp, EE)\nexports.Gyp = Gyp\nvar proto = Gyp.prototype\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package')\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n    help: Boolean     // everywhere\n  , arch: String      // 'configure'\n  , cafile: String    // 'install'\n  , debug: Boolean    // 'build'\n  , directory: String // bin\n  , make: String      // 'build'\n  , msvs_version: String // 'configure'\n  , ensure: Boolean   // 'install'\n  , solution: String  // 'build' (windows only)\n  , proxy: String     // 'install'\n  , devdir: String   // everywhere\n  , nodedir: String   // 'configure'\n  , loglevel: String  // everywhere\n  , python: String    // 'configure'\n  , 'dist-url': String // 'install'\n  , 'tarball': String // 'install'\n  , jobs: String      // 'build'\n  , thin: String      // 'configure'\n}\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n    release: '--no-debug'\n  , C: '--directory'\n  , debug: '--debug'\n  , j: '--jobs'\n  , silly: '--loglevel=silly'\n  , verbose: '--loglevel=verbose'\n  , silent: '--loglevel=silent'\n}\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts (argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv)\n  this.argv = this.opts.argv.remain.slice()\n\n  var commands = this.todo = []\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg]\n    }\n    return arg\n  }, this)\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg))\n      argv.shift()\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args\n      }\n      commands.push({ name: arg, args: [] })\n    }\n  }, this)\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0)\n  }\n\n  // support for inheriting config env variables from npm\n  var npm_config_prefix = 'npm_config_'\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npm_config_prefix) !== 0) return\n    var val = process.env[name]\n    if (name === npm_config_prefix + 'loglevel') {\n      log.level = val\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npm_config_prefix.length)\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) this.opts[name] = val\n    }\n  }, this)\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel\n  }\n  log.resume()\n}\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn (command, args, opts) {\n  if (!opts) opts = {}\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [ 0, 1, 2 ]\n  }\n  var cp = child_process.spawn(command, args, opts)\n  log.info('spawn', command)\n  log.info('spawn args', args)\n  return cp\n}\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage () {\n  var str = [\n      ''\n    , '  Usage: node-gyp <command> [options]'\n    , ''\n    , '  where <command> is one of:'\n    , commands.map(function (c) {\n        return '    - ' + c + ' - ' + require('./' + c).usage\n      }).join('\\n')\n    , ''\n    , 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..')\n    , 'node@' + process.versions.node\n  ].join('\\n')\n  return str\n}\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n    get: function () {\n      return this.package.version\n    }\n  , enumerable: true\n})\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}