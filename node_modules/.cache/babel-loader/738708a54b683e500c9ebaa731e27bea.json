{"ast":null,"code":"exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */\nvar debug;\n/* nomin */\nif (typeof process === 'object' && /* nomin */process.env && /* nomin */process.env.NODE_DEBUG && /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) /* nomin */debug = function debug() {\n    /* nomin */var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */\n    args.unshift('SEMVER');\n    /* nomin */\n    console.log.apply(console, args);\n    /* nomin */\n  };\n  /* nomin */else /* nomin */debug = function debug() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) re[i] = new RegExp(src[i]);\n}\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer) return version;\n  if (typeof version !== 'string') return null;\n  if (version.length > MAX_LENGTH) return null;\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version)) return null;\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\nexports.SemVer = SemVer;\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose) return version;else version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n  if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  if (!(this instanceof SemVer)) return new SemVer(version, loose);\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n  if (!m) throw new TypeError('Invalid Version: ' + version);\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version');\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n    if (/^[0-9]+$/.test(id)) {\n      var num = +id;\n      if (num >= 0 && num < MAX_SAFE_INTEGER) return num;\n    }\n    return id;\n  });\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\nSemVer.prototype.toString = function () {\n  return this.version;\n};\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n  return this.compareMain(other) || this.comparePre(other);\n};\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) this.prerelease = [0];else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1)\n          // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n        } else this.prerelease = [identifier, 0];\n      }\n      break;\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre' + key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n  return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n}\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '':\n    case '=':\n    case '==':\n      ret = eq(a, b, loose);\n      break;\n    case '!=':\n      ret = neq(a, b, loose);\n      break;\n    case '>':\n      ret = gt(a, b, loose);\n      break;\n    case '>=':\n      ret = gte(a, b, loose);\n      break;\n    case '<':\n      ret = lt(a, b, loose);\n      break;\n    case '<=':\n      ret = lte(a, b, loose);\n      break;\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose) return comp;else comp = comp.value;\n  }\n  if (!(this instanceof Comparator)) return new Comparator(comp, loose);\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n  if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n  debug('comp', this);\n}\nvar ANY = {};\nComparator.prototype.parse = function (comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n  if (!m) throw new TypeError('Invalid comparator: ' + comp);\n  this.operator = m[1];\n  if (this.operator === '=') this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);\n};\nComparator.prototype.toString = function () {\n  return this.value;\n};\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.loose);\n  if (this.semver === ANY) return true;\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n  return cmp(version, this.operator, this.semver, this.loose);\n};\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range && range.loose === loose) return range;\n  if (!(this instanceof Range)) return new Range(range, loose);\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n  this.format();\n}\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\nRange.prototype.toString = function () {\n  return this.range;\n};\nRange.prototype.parseRange = function (range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, loose);\n  });\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n      if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n}\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) gtlt = '';\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm) m = 0;\n      if (xp) p = 0;\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) M = +M + 1;else m = +m + 1;\n      }\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n    debug('xRange return', ret);\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n  if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n  return (from + ' ' + to).trim();\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) return false;\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version)) return true;\n  }\n  return false;\n};\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) return false;\n  }\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) continue;\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n  return true;\n}\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}","map":{"version":3,"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","loose","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","Range","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","maxSatisfying","versions","minSatisfying","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","parsed"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/node_modules/semver/semver.js"],"sourcesContent":["exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}