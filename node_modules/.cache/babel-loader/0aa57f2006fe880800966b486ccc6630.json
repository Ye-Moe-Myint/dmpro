{"ast":null,"code":"var path = require('path'),\n  log = require('npmlog');\nfunction findNodeDirectory(scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname;\n  }\n  if (processObj === undefined) {\n    processObj = process;\n  }\n\n  // Have a look to see what is above us, to try and work out where we are\n  npm_parent_directory = path.join(scriptLocation, '../../../..');\n  log.verbose('node-gyp root', 'npm_parent_directory is ' + path.basename(npm_parent_directory));\n  node_root_dir = \"\";\n  log.verbose('node-gyp root', 'Finding node root directory');\n  if (path.basename(npm_parent_directory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    node_root_dir = path.join(npm_parent_directory, '..');\n    log.verbose('node-gyp root', 'in build directory, root = ' + node_root_dir);\n  } else if (path.basename(npm_parent_directory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      node_root_dir = path.join(npm_parent_directory, '..');\n    } else {\n      node_root_dir = path.join(npm_parent_directory, '../..');\n    }\n    log.verbose('node-gyp root', 'in install directory, root = ' + node_root_dir);\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var node_dir = path.dirname(processObj.execPath);\n    var directory_up = path.basename(node_dir);\n    if (directory_up === 'bin') {\n      node_root_dir = path.join(node_dir, '..');\n    } else if (directory_up === 'Release' || directory_up === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        node_root_dir = path.join(node_dir, '..');\n      } else {\n        node_root_dir = path.join(node_dir, '../..');\n      }\n    }\n    // Else return the default blank, \"\".\n  }\n\n  return node_root_dir;\n}\nmodule.exports = findNodeDirectory;","map":{"version":3,"names":["path","require","log","findNodeDirectory","scriptLocation","processObj","undefined","__dirname","process","npm_parent_directory","join","verbose","basename","node_root_dir","platform","node_dir","dirname","execPath","directory_up","module","exports"],"sources":["/Users/lieo/diabetes/CUT2DMTest/node_modules/node-gyp/lib/find-node-directory.js"],"sourcesContent":["var path = require('path')\n  , log = require('npmlog')\n\nfunction findNodeDirectory(scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname\n  }\n  if (processObj === undefined) {\n    processObj = process\n  }\n\n  // Have a look to see what is above us, to try and work out where we are\n  npm_parent_directory = path.join(scriptLocation, '../../../..')\n  log.verbose('node-gyp root', 'npm_parent_directory is '\n              + path.basename(npm_parent_directory))\n  node_root_dir = \"\"\n\n  log.verbose('node-gyp root', 'Finding node root directory')\n  if (path.basename(npm_parent_directory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    node_root_dir = path.join(npm_parent_directory, '..')\n    log.verbose('node-gyp root', 'in build directory, root = '\n                + node_root_dir)\n  } else if (path.basename(npm_parent_directory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      node_root_dir = path.join(npm_parent_directory, '..')\n    } else {\n      node_root_dir = path.join(npm_parent_directory, '../..')\n    }\n    log.verbose('node-gyp root', 'in install directory, root = '\n                + node_root_dir)\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var node_dir = path.dirname(processObj.execPath)\n    var directory_up = path.basename(node_dir)\n    if (directory_up === 'bin') {\n      node_root_dir = path.join(node_dir, '..')\n    } else if (directory_up === 'Release' || directory_up === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        node_root_dir = path.join(node_dir, '..')\n      } else {\n        node_root_dir = path.join(node_dir, '../..')\n      }\n    }\n    // Else return the default blank, \"\".\n  }\n  return node_root_dir\n}\n\nmodule.exports = findNodeDirectory\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;EACtBC,GAAG,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE3B,SAASE,iBAAiB,CAACC,cAAc,EAAEC,UAAU,EAAE;EACrD;EACA;EACA,IAAID,cAAc,KAAKE,SAAS,EAAE;IAChCF,cAAc,GAAGG,SAAS;EAC5B;EACA,IAAIF,UAAU,KAAKC,SAAS,EAAE;IAC5BD,UAAU,GAAGG,OAAO;EACtB;;EAEA;EACAC,oBAAoB,GAAGT,IAAI,CAACU,IAAI,CAACN,cAAc,EAAE,aAAa,CAAC;EAC/DF,GAAG,CAACS,OAAO,CAAC,eAAe,EAAE,0BAA0B,GACzCX,IAAI,CAACY,QAAQ,CAACH,oBAAoB,CAAC,CAAC;EAClDI,aAAa,GAAG,EAAE;EAElBX,GAAG,CAACS,OAAO,CAAC,eAAe,EAAE,6BAA6B,CAAC;EAC3D,IAAIX,IAAI,CAACY,QAAQ,CAACH,oBAAoB,CAAC,KAAK,MAAM,EAAE;IAClD;IACA;IACAI,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACD,oBAAoB,EAAE,IAAI,CAAC;IACrDP,GAAG,CAACS,OAAO,CAAC,eAAe,EAAE,6BAA6B,GAC5CE,aAAa,CAAC;EAC9B,CAAC,MAAM,IAAIb,IAAI,CAACY,QAAQ,CAACH,oBAAoB,CAAC,KAAK,cAAc,EAAE;IACjE;IACA;IACA;IACA;IACA,IAAIJ,UAAU,CAACS,QAAQ,KAAK,OAAO,EAAE;MACnCD,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACD,oBAAoB,EAAE,IAAI,CAAC;IACvD,CAAC,MAAM;MACLI,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACD,oBAAoB,EAAE,OAAO,CAAC;IAC1D;IACAP,GAAG,CAACS,OAAO,CAAC,eAAe,EAAE,+BAA+B,GAC9CE,aAAa,CAAC;EAC9B,CAAC,MAAM;IACL;IACA;IACA,IAAIE,QAAQ,GAAGf,IAAI,CAACgB,OAAO,CAACX,UAAU,CAACY,QAAQ,CAAC;IAChD,IAAIC,YAAY,GAAGlB,IAAI,CAACY,QAAQ,CAACG,QAAQ,CAAC;IAC1C,IAAIG,YAAY,KAAK,KAAK,EAAE;MAC1BL,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACK,QAAQ,EAAE,IAAI,CAAC;IAC3C,CAAC,MAAM,IAAIG,YAAY,KAAK,SAAS,IAAIA,YAAY,KAAK,OAAO,EAAE;MACjE;MACA;MACA;MACA,IAAIb,UAAU,CAACS,QAAQ,KAAK,OAAO,EAAE;QACnCD,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACK,QAAQ,EAAE,IAAI,CAAC;MAC3C,CAAC,MAAM;QACLF,aAAa,GAAGb,IAAI,CAACU,IAAI,CAACK,QAAQ,EAAE,OAAO,CAAC;MAC9C;IACF;IACA;EACF;;EACA,OAAOF,aAAa;AACtB;AAEAM,MAAM,CAACC,OAAO,GAAGjB,iBAAiB"},"metadata":{},"sourceType":"script"}